apiVersion: v1
kind: Namespace
metadata:
  name: demoapp-ns
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  namespace: demoapp-ns
  name: demoapp-storage-class
provisioner: blob.csi.azure.com
parameters:
  skuName: Standard_ZRS
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: demoapp-ns
  name: demoapp-storage-claim
  annotations:
        volume.beta.kubernetes.io/storage-class: demoapp-storage-class
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: demoapp-storage-class
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demoapp-ns
  name: demoapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demoapp-app
  template:
    metadata:
      labels:
        app: demoapp-app
    spec:
      containers:
      - name: demoapp
        image: crgaraksadvancedacr.azurecr.io/demoapp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
            - mountPath: "/mnt/demoappfiles"
              name: volume
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: demoapp-storage-claim
      imagePullSecrets:
      - name: crgaraksadvancedacr
---
apiVersion: v1
kind: Service
metadata:
  namespace: demoapp-ns
  name: demoapp-svc
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: demoapp-app
---